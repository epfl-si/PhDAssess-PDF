#!/bin/bash
#
# This is a wrapper around ansible / ansible-playbook.
#
# Usage ("ansible" mode):
#
#   ./pdfisible -m raw all -a 'uptime'
#
# Usage ("ansible-playbook" mode):
#
#   ./anbisble/pdfisible
#
# If you are unfamiliar with Ansible, read up on it at
# - https://www.ansible.com/overview/how-ansible-works
# - https://github.com/jdauphant/awesome-ansible

cd "$(dirname "$(realpath "$0")")"

# One can override these on the command line
playbook_flags=""
ansible_flags=""

warn () {
    if [ -n "$1" ]; then
        echo "$@" >&2
    else
        cat >&2
    fi
}

fatal () {
    warn "$@"
    exit 1
}

platform_check () {
    if ! test -f ~/.ansible/ansible-suitcase/.versions 2>/dev/null; then
        curl https://raw.githubusercontent.com/epfl-si/ansible.suitcase/master/install.sh | \
            SUITCASE_DIR=~/.ansible/ansible-suitcase SUITCASE_ANSIBLE_REQUIREMENTS=requirements.yml sh -x
    fi
    export PATH="~/.ansible/ansible-suitcase/bin:$PATH"
    export ANSIBLE_ROLES_PATH="~/.ansible/ansible-suitcase/roles"

    oc_check
    zbctl_check
    keybase_check
    docker_check
}

oc_check () {
  case "$(oc version | grep Client)" in
    "Client Version: 3"*) fatal "Please update your oc to >4.7";;
    "Client Version: 4"*) :;;
    *) fatal "Please install oc >4.7";;
  esac

  if ! oc projects >/dev/null 2>&1; then
    echo "Please login to openshift:"
    oc login
  fi
}

zbctl_check () {
  which zbctl >/dev/null || fatal "Please install zbctl (maybe 'npm install -g zbctl' ?)"
}

keybase_check () {
  ls /keybase >/dev/null || fatal "Please install keybase"
  ls /keybase/team/epfl_phdassess/ >/dev/null || fatal "Please get your rights to access the /keybase/team/epfl_phdassess/ folder"
}

docker_check () {
  which docker >/dev/null || fatal "Please install docker"
}

inventory_mode="test"
inventories () {
    echo "-i inventory.yml -i inventory/test.yml"
    case "$inventory_mode" in
        *prod*) echo "-i inventory/prod.yml" ;;
    esac
}

###########################################################################

mode=ansible-playbook

declare -a ansible_args
while [ "$#" -gt 0 ]; do
  case "$1" in
        -m) mode=ansible
            ansible_args+=("-m")
            shift ;;
        --prod)
            inventory_mode="test_and_prod"
            shift ;;
        *)
            ansible_args+=("$1")
            shift ;;
    esac
done

# https://github.com/ansible/ansible/issues/32499, https://bugs.python.org/issue35219
case "$(uname -s)" in
    Darwin) export OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES ;;
esac

set -e

platform_check
case "$mode" in
    ansible-playbook)
        ansible-playbook $playbook_flags $(inventories) "${ansible_args[@]}" \
                         playbook.yml
        ;;
    ansible)
        ansible $(inventories) $ansible_flags "${ansible_args[@]}"
        ;;
esac
